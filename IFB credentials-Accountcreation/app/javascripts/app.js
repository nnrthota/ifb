import "../stylesheets/app.css";
import { default as Web3} from 'web3';
import { default as contract } from 'truffle-contract';
var accounts;
var account;
var AccountContract;
var ifbIdentityCode;
window.App = {
  start: function() {
    var self = this;
    web3.eth.getAccounts(function(err, accs) {
      if (err != null) {
        alert("There was an error fetching your accounts.");
        return;
      }
      if (accs.length == 0) {
        alert("Couldn't get any accounts! Make sure your Ethereum client is configured correctly.");
        return;
      }

      accounts = accs;
      account = accounts[0];
      web3.eth.defaultAccount= account;
        AccountContract = web3.eth.contract([{"constant":false,"inputs":[],"name":"GetCount","outputs":[{"name":"","type":"uint8"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"CountNo","type":"uint8"}],"name":"getAccount","outputs":[{"name":"","type":"string"},{"name":"","type":"string"},{"name":"","type":"string"},{"name":"","type":"string"}],"payable":false,"stateMutability":"nonpayable","type":"function"},{"constant":false,"inputs":[{"name":"fullIdentity","type":"string"},{"name":"username","type":"string"},{"name":"password","type":"string"},{"name":"role","type":"string"}],"name":"addNewAccount","outputs":[],"payable":false,"stateMutability":"nonpayable","type":"function"}]);
        ifbIdentityCode = ("60606040526000600160006101000a81548160ff021916908360ff160217905550341561002b57600080fd5b6108dc8061003a6000396000f30060606040526000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680630ab93971146100535780636c3aa54d14610082578063876d2bde1461026557600080fd5b341561005e57600080fd5b61006661038b565b604051808260ff1660ff16815260200191505060405180910390f35b341561008d57600080fd5b6100a6600480803560ff169060200190919050506103a2565b6040518080602001806020018060200180602001858103855289818151815260200191508051906020019080838360005b838110156100f25780820151818401526020810190506100d7565b50505050905090810190601f16801561011f5780820380516001836020036101000a031916815260200191505b50858103845288818151815260200191508051906020019080838360005b8381101561015857808201518184015260208101905061013d565b50505050905090810190601f1680156101855780820380516001836020036101000a031916815260200191505b50858103835287818151815260200191508051906020019080838360005b838110156101be5780820151818401526020810190506101a3565b50505050905090810190601f1680156101eb5780820380516001836020036101000a031916815260200191505b50858103825286818151815260200191508051906020019080838360005b83811015610224578082015181840152602081019050610209565b50505050905090810190601f1680156102515780820380516001836020036101000a031916815260200191505b509850505050505050505060405180910390f35b341561027057600080fd5b610389600480803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001908201803590602001908080601f0160208091040260200160405190810160405280939291908181526020018383808284378201915050505050509190803590602001908201803590602001908080601f016020809104026020016040519081016040528093929190818152602001838380828437820191505050505050919050506106a1565b005b6000600160009054906101000a900460ff16905090565b6103aa6107a2565b6103b26107a2565b6103ba6107a2565b6103c26107a2565b6000808660ff1681526020019081526020016000206000016000808760ff1681526020019081526020016000206001016000808860ff1681526020019081526020016000206002016000808960ff168152602001908152602001600020600301838054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156104b75780601f1061048c576101008083540402835291602001916104b7565b820191906000526020600020905b81548152906001019060200180831161049a57829003601f168201915b50505050509350828054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105535780601f1061052857610100808354040283529160200191610553565b820191906000526020600020905b81548152906001019060200180831161053657829003601f168201915b50505050509250818054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105ef5780601f106105c4576101008083540402835291602001916105ef565b820191906000526020600020905b8154815290600101906020018083116105d257829003601f168201915b50505050509150808054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561068b5780601f106106605761010080835404028352916020019161068b565b820191906000526020600020905b81548152906001019060200180831161066e57829003601f168201915b5050505050905093509350935093509193509193565b6106a96107b6565b84816000018190525083816020018190525082816040018190525081816060018190525080600080600160009054906101000a900460ff1660ff168152602001908152602001600020600082015181600001908051906020019061070e9291906107f7565b50602082015181600101908051906020019061072b9291906107f7565b5060408201518160020190805190602001906107489291906107f7565b5060608201518160030190805190602001906107659291906107f7565b509050506001600081819054906101000a900460ff168092919060010191906101000a81548160ff021916908360ff160217905550505050505050565b602060405190810160405280600081525090565b6080604051908101604052806107ca610877565b81526020016107d7610877565b81526020016107e4610877565b81526020016107f1610877565b81525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061083857805160ff1916838001178555610866565b82800160010185558215610866579182015b8281111561086557825182559160200191906001019061084a565b5b509050610873919061088b565b5090565b602060405190810160405280600081525090565b6108ad91905b808211156108a9576000816000905550600101610891565b5090565b905600a165627a7a723058205b6eff809c6af5c4b91997e028f11ca2255b1a52c066fdf13a03dd25b06b3bb10029");    
    });
  },
    createContract: function()
  {
    AccountContract.new("", {from:account, data: ifbIdentityCode, gas: 3000000}, function (error, deployedContract){
		if(error){
			alert('Please tryagain')
		}
      else(deployedContract.address)
      {
        document.getElementById("contractAddress").value=deployedContract.address;
      }
    })
  },
  addNewAccount: function()
  {
    var contractAddress = document.getElementById("contractAddress").value;
    var deployedAccount = AccountContract.at(contractAddress);
	var fullIdentity = document.getElementById("fullIdentity").value;
    var username = document.getElementById("username").value;
    var pass = document.getElementById("password").value;
    var role = document.getElementById("search_categories").value;   
    deployedAccount.addNewAccount(fullIdentity, username, pass, role, function(error){
      console.log(error);
	  if(error){
		  alert("Account has not been created");
	  }else {
		  alert("Account has been created successfully");
	  }
    })
  }
 
};

window.addEventListener('load', function() {
  if (typeof web3 !== 'undefined') {
    console.warn("Using web3 detected from external source.  If using MetaMask, see the following link. Feel free to delete this warning. :) http://truffleframework.com/tutorials/truffle-and-metamask")
    window.web3 = new Web3(web3.currentProvider);
  } else {
    console.warn("No web3 detected. Falling back to http://localhost:8545. You should remove this fallback when you deploy live, as it's inherently insecure. Consider switching to Metamask for development. More info here: http://truffleframework.com/tutorials/truffle-and-metamask");
    // fallback - use your fallback strategy (local node / hosted node + in-dapp id mgmt / fail)
    window.web3 = new Web3(new Web3.providers.HttpProvider("http://localhost:8545"));
  }
  App.start();
});
